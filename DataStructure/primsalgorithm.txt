
#include <stdio.h>
#include <limits.h>
#include <stdbool.h>

#define MAX_VERTICES 20

int min_key(int key[], bool mst_set[], int V) {
    int min = INT_MAX, min_index;

    for (int v = 0; v < V; v++) {
        if (mst_set[v] == false && key[v] < min) {
            min = key[v];
            min_index = v;
        }
    }

    return min_index;
}

void print_mst(int parent[], int graph[MAX_VERTICES][MAX_VERTICES], int V) {
    printf("Edge \tWeight\n");
    for (int i = 1; i < V; i++) {
        printf("%d - %d \t%d \n", parent[i], i, graph[i][parent[i]]);
    }
}

void prim_mst(int graph[MAX_VERTICES][MAX_VERTICES], int V) {
    int parent[MAX_VERTICES];
    int key[MAX_VERTICES];
    bool mst_set[MAX_VERTICES];

    for (int i = 0; i < V; i++) {
        key[i] = INT_MAX;
        mst_set[i] = false;
    }

    key[0] = 0;
â€ƒ
    parent[0] = -1;

    for (int count = 0; count < V - 1; count++) {
        int u = min_key(key, mst_set, V);
        mst_set[u] = true;

        for (int v = 0; v < V; v++) {
            if (graph[u][v] && mst_set[v] == false && graph[u][v] < key[v]) {
                parent[v] = u;
                key[v] = graph[u][v];
            }
        }
    }
    print_mst(parent, graph, V);
}

int main() {
    int V;
    printf("Enter the number of vertices: ");
    scanf("%d", &V);

    int graph[MAX_VERTICES][MAX_VERTICES];
    printf("Enter the adjacency matrix of the graph:\n");
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    prim_mst(graph, V);

    return 0;
}

