#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* next;
}; 
struct Node* createNode(int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    if (newNode == NULL) {
        printf("Memory allocation failed\n");
        exit(EXIT_FAILURE);
    }
    newNode->data = value;
    newNode->next = NULL;
    return newNode;
}
void push(struct Node** top, int value) {
    struct Node* newNode = createNode(value);
    newNode->next = *top;
    *top = newNode;
    printf("%d pushed to the stack\n", value);
}
int pop(struct Node** top) {
    if (*top == NULL) {
        printf("Stack is empty\n");
        exit(EXIT_FAILURE);
    }
    int value = (*top)->data;
    struct Node* temp = *top;
    *top = (*top)->next;                                                                                                                                                              
.     free(temp);
    return value;
}
int isEmpty(struct Node* top) {
    return top == NULL;
}

void printStack(struct Node* top) {
    printf("Stack: ");
    while (top != NULL) {
        printf("%d ", top->data);
        top = top->next;
    }
    printf("\n");
}
int main() {
    struct Node* top = NULL;
    int value, choice;
    do {
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Print Stack\n");
        printf("4. Quit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("Enter a value to push: ");
                scanf("%d", &value);
                push(&top, value);
                break;
            case 2:
                if (!isEmpty(top))
                    printf("%d popped from the stack\n", pop(&top));
                break;
            case 3:
                printStack(top);
                break;
            case 4:
                printf("Exiting the program\n");
                break;
            default:
                printf("Invalid choice. Please enter a valid option.\n");
        }
    } while (choice != 4);
    return 0;
}
